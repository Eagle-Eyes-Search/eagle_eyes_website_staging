:root {
    --ui-black: #000000;
    --ui-white: #ffffff;
    --ui-red: #cc0000;
    --ui-pale-red: #ff8888;
    --ui-dark-grey: #222222;
    --ui-darkish-grey: #444444;
    --ui-grey: #666666;
    --ui-dark-blue: #000066;
    --ui-eye-blue: #3388ff;
    --ui-eye-blue-faded-light: #66aaff;
    /* --ui-eye-blue-faded-very-light: #99ccff;  Ligher! */
    --ui-eye-blue-faded-very-light: #c2ddf4;
    --ui-eye-blue-faded: #4499cc;
    --ui-eye-blue-faded-dark: #336699;
    --ui-yellow: #aaaa00;

}


.info-box {
    background-color: var(--ui-eye-blue-faded-very-light);
    padding: 10px;
    margin-bottom: 15px;
    border-radius: 5px;
}

.error-box {
    background-color: var(--ui-pale-red);
    padding: 10px;
    margin-bottom: 15px;
    border-radius: 5px;
}

.expandable-menu {
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 15px;
    border-radius: 5px;
    background-color: #f9f9f9;
}

.expandable-menu .menu-title {
    cursor: pointer;
    position: relative;
    font-size: 16px;
    color: #333;
    margin-bottom: 10px;
    font-weight: bold;
    text-transform: uppercase;
}

.expandable-menu .menu-title::before {
    content: 'â–¼';
    /* dropdown arrow */
    font-size: 12px;
    position: absolute;
    left: -20px;
    top: 50%;
    transform: translateY(-50%);
    transition: transform 0.3s ease;
}

.expandable-menu .menu-title.collapsed::before {
    transform: translateY(-50%) rotate(-90deg);
    /* arrow pointing right when collapsed */
}


.user-type label, .user-type input, .license-duration label, .license-duration input {
    display: block;
}



button {
    background-color: #4499cc;
    /* Faded blue */
    border: none;
    color: white;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
    border-radius: 4px;
}


button:active {
    background-color: #3e8ebe;
    /* Darker blue */
}


.non_important_button {
    background-color: #6c6c6c;
}

button:not(:disabled):hover {
    background-color: #3e8ebe;
    /* Darker blue */
}


/* Buttons with 'disabled' property should be greyed out, with no hover effect */
button:disabled {
    background-color: #6c6c6c;
    color: #ccc;
    cursor: not-allowed;
}

/* Add a 'processing' property to buttons that shows user that something is happenign */
button.processing {
    background-color: #6c6c6c;
    cursor: wait;
}

.menu-title {
    display: flex;
    /* Use flexbox for layout */
    align-items: center;
    /* Align items vertically */
    justify-content: space-between;
    /* Space between title and button */
    cursor: pointer;
    /* Optional: indicates the title is clickable */
}

.menu-title button {
    cursor: pointer;
    /* Indicates the button is clickable */
    margin: 0;
    /* Adjusts margin to better align with the text */
    padding: 0 8px;
    /* Adjust padding to your liking */
    background: none;
    /* Removes default background */
    border: none;
    /* Removes default border */
    font-size: 1em;
    /* Adjust the font size to match your title */
}


.menu-content {
    display: none;
    padding-top: 10px;
    display: flex;
    /* Enables flexbox */
    align-items: stretch;
    /* Stretch items to fill the container vertically */
}

.left-column {
    flex-grow: 1;
    /* Allows the column to take up the available space */
    display: flex;
    /* Enables flexbox for the column */
    flex-direction: column;
    /* Stack children vertically */
    justify-content: space-around;
    /* Distributes space around items */
    margin-right: 10px;
    /* Optional: Adds some space between the column and the button */
}

#copy-btn {
    height: 100%;
    /* Fill the full vertical space */
    flex-grow: 0;
    /* Do not allow the button to grow */
    flex-shrink: 0;
    /* Prevent the button from shrinking */
    align-self: stretch;
    /* Stretch the button to fill the container */
}


.checkbox-container {
    display: flex;
    align-items: center; /* Aligns checkbox and label text vertically */
}

.checkbox-label {
    margin-left: 10px; /* Adds some space between the checkbox and the label text */
    padding: 5px;
    border: 1px solid #ccc; /* Example border */
    display: block;
    min-width: 200px; /* Or any other width as per your design */
    background-color: #f9f9f9; /* Light background color */
    border-radius: 5px; /* Optional: for rounded corners */
}

input[type=text],
input[type=password] {
    width: 80%;
    padding: 12px 20px;
    margin: 8px 0;
    display: inline-block;
    border: 1px solid #ccc;
    box-sizing: border-box;
}

.button-container {
    display: flex;            /* Establishes a flex container */
    justify-content: flex-start; /* Centers buttons horizontally in the container */
    align-items: center;     /* Aligns buttons vertically */
    gap: 20px;               /* Adds space between the buttons */
    flex-wrap: wrap;        /* Allows buttons to wrap onto the next line if needed */
    padding: 10px;           /* Optional: Adds some padding around the container */
}

.button-container button {
    flex-grow: 0;  /* Prevents buttons from growing beyond their content size */
    flex-shrink: 0; /* Prevents buttons from shrinking smaller than their content */
    flex-basis: content; /* Flex basis is set to the content's actual size */
    padding: 10px 20px; /* Padding inside each button */
    text-align: center;
    white-space: nowrap; /* Prevents text from wrapping inside the button */
    margin: 5px; /* Provides space around each button */
}

#licenses table {
    border-collapse: collapse;
    width: 100%;
    border: 1px solid black;
}

#licenses th, #licenses td {
    border: 1px solid black;
}

.container {
    display: flex;
    flex-wrap: wrap; /* Allows items to wrap as needed */
    justify-content: space-between; /* Distributes space between items */
    padding: 20px;
}

.box {
    padding: 20px;
    border: 1px solid #ccc;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    box-sizing: border-box;
    margin: 10px; /* Space between boxes */
    flex: 1 1 300px; /* Flexible sizing with a basis of 300px */
}

/* Specific styles for the left license box */
.license-box {
    display: flex;
    flex-direction: column;
    gap: 10px; /* Space between elements inside the license box */
    min-height: fit-content; /* Ensures box expands to fit content */
    height: auto; /* Allow height to grow based on content */
    overflow: visible; /* Ensure content isn't cut off */
}

.license-box #license-select {
    width: 100%; /* Ensures dropdown and textarea take full width */
    box-sizing: border-box;
}

.license-box .license-info-box, .license-info {
    width: 100%; /* Ensures textarea takes full width */
    height: 8em;
    box-sizing: border-box;
    overflow-y: auto; /* Allows scrolling if content exceeds the textarea height */
}

.license-box .input-label {
    margin-bottom: 5px; /* Additional spacing below the label */
}

/* Aligns items vertically if the total width of the boxes exceeds the container's width */
@media (max-width: 640px) { /* This breakpoint should be adjusted based on actual box and container widths */
    .container {
        flex-direction: column;
    }
    .box {
        flex: 0 0 100%; /* Forces boxes to expand to full container width */
        min-height: fit-content; /* Ensures box expands to fit content */
        height: auto !important; /* Important to override any fixed heights */
        overflow: visible !important; /* Ensure content isn't cut off */
        margin-bottom: 20px; /* Add more space between boxes on mobile */
        padding-bottom: 20px; /* Add more padding at the bottom */
    }
    
    /* Ensure buttons are visible */
    .box .button-container {
        margin-top: 15px;
        margin-bottom: 15px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    
    .box .button-container button {
        width: 80%; /* Make buttons wider on mobile */
        margin: 10px 0;
        padding: 15px;
        font-size: 16px;
    }
}

button .non_clickable {
    cursor: not-allowed; /* Shows a 'not allowed' cursor on hover */
    pointer-events: none; /* Prevents the button from receiving click events */
    background-color: #6c6c6c;
}


.tooltip {
    position: relative;
    display: inline-block;
    cursor: help;
    border-bottom: 1px dotted black; /* Visual cue for tooltips */
}

.tooltip .tooltiptext {
    visibility: hidden;
    background-color: black;
    color: #fff;
    text-align: left;
    font-size: 11px; /* Setting font size to 11 */
    border-radius: 6px;
    padding: 5px;
    position: absolute;
    z-index: 1;
    top: 120%; /* Position below the cursor */
    left: 50%;
    transform: translateX(-50%);
    max-width: 500px; /* Maximum width set */
    white-space: normal;
    min-width: 300px;
    word-wrap: break-word;
    overflow-wrap: break-word;
    box-sizing: border-box; /* Ensures padding is included in width */
    opacity: 0;
    transition: opacity 0.2s, visibility 0.2s; /* Adjusted for better visibility handling */
}

.tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
}
